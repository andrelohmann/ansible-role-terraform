---

- name: Install packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
  vars:
    packages:
    - curl
    - jq
    - unzip

- name: Extract latest version number
  when: terraform_version == "latest"
  block:

  - name: Fetch latest terraform version
    ansible.builtin.shell: >
      set -o pipefail && \
      curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M '.current_version'
    args:
      executable: /bin/bash
    register: latest_terraform_version
    changed_when: false

  - name: Set terraform_version
    ansible.builtin.set_fact:
      terraform_version: "{{ latest_terraform_version.stdout }}"

- name: Check terraform version
  ansible.builtin.shell: "set -o pipefail && terraform --version 2>&1 | grep {{ terraform_version }}"
  failed_when: false
  register: terraform_versions_match
  changed_when: false

- name: Download terraform
  ansible.builtin.include_tasks: download.yml
  when: terraform_versions_match.rc != 0

- name: Unarchive Terraform archive
  ansible.builtin.unarchive:
    src: /tmp/terraform-{{ terraform_version }}.zip
    dest: "/usr/local/bin"
    copy: false
  when: terraform_versions_match.rc != 0

...
